{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","flip","set","number","useSpring","reset","reverse","from","delay","config","gentle","onRest","color","num","color2","style","display","gridAutoFlow","placeContent","div","justifyItems","alignItems","width","to","n","height","minWidth","backgroundColor","borderRadius","toFixed","rootElement","document","getElementById","render"],"mappings":"wJAGe,SAASA,IAEtB,MAAoBC,oBAAS,GAA7B,mBAAOC,EAAP,KAAaC,EAAb,KAEQC,EAAWC,oBAAU,CAC3BC,OAAO,EACPC,QAASL,EACTM,KAAM,CAAEJ,OAAQ,GAChBA,OALQ,IAMRK,MAAO,KACPC,OAAQA,SAAOC,OACfC,OAAQ,kBAAMT,GAAKD,MAPbE,OASAS,EAAUR,oBAAU,CAC1BC,OAAO,EACPC,QAASL,EACTM,KAAM,CAAEK,MAAM,WAAD,OAAaC,IAAb,WACbD,MAAM,kBACNJ,MAAO,KACPC,OAAQA,SAAOC,OACfC,OAAQ,kBAAMT,GAAKD,MAPbW,MASAE,EAAWV,oBAAU,CAC3BC,OAAO,EACPC,QAASL,EACTM,KAAM,CAAEO,OAAO,mBACfA,OAAO,qBACPN,MAAO,KACPC,OAAQA,SAAOC,OACfC,OAAQ,kBAAMT,GAAKD,MAPba,OAWR,OAAO,sBAAKC,MAAO,CAACC,QAAQ,OAAOC,aAAa,SAASC,aAAa,UAA/D,UACP,cAAC,WAASC,IAAV,CAAcJ,MAAO,CACnBH,MAAM,QACNI,QAAQ,OACNI,aAAa,SACbC,WAAW,SACbC,MAAOnB,EAAOoB,IAAG,SAAAC,GAAC,OAAG,IAAIA,KACzBC,OAAQ,IACRC,SAAU,GACVC,gBAAiBf,EACjBgB,aAAc,IAThB,SAUKzB,EAAOoB,IAAG,SAAAC,GAAC,OAAK,IAAIA,GAAGK,QAAQ,QAElC,cAAC,WAASV,IAAV,CAAcJ,MAAO,CACnBH,MAAM,QACNI,QAAQ,OACRI,aAAa,SACbC,WAAW,SACXC,MAAOnB,EACPsB,OAAQ,IACRC,SAAU,GACZC,gBAAiBb,EACjBc,aAAc,IATd,SASqBzB,EAAOoB,IAAG,SAAAC,GAAC,OAAIA,EAAEK,QAAQ,WCtDlD,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAAClC,EAAD,IAAS+B,K","file":"static/js/main.b3b0feff.chunk.js","sourcesContent":["import { useSpring, animated ,config} from 'react-spring';\nimport {useState } from 'react';\n\nexport default function App() {\n\n  const [flip, set] = useState(false);\n  const num=200;\n  const { number } = useSpring({\n    reset: false,\n    reverse: flip,\n    from: { number: 0 },\n    number: num,\n    delay: 1200,\n    config: config.gentle,\n    onRest: () => set(!flip),\n  })\n  const { color } = useSpring({\n    reset: false,\n    reverse: flip,\n    from: { color: `rgb(69, ${num+32}, 145)` },\n    color: `rgb(69, 0, 145)`,\n    delay: 1200,\n    config: config.gentle,\n    onRest: () => set(!flip),\n  })\n  const { color2 } = useSpring({\n    reset: false,\n    reverse: flip,\n    from: { color2: `rgb(69, 0, 145)` },\n    color2: `rgb(249, 112, 145)`,\n    delay: 1200,\n    config: config.gentle,\n    onRest: () => set(!flip),\n  })\n  \n\n  return <div style={{display:\"grid\",gridAutoFlow:\"column\",placeContent:\"center\"}}>\n  <animated.div style={{\n    color:\"white\",\n    display:\"grid\",\n      justifyItems:\"center\",\n      alignItems:\"center\",\n    width: number.to(n=>(200-n)),\n    height: 200,\n    minWidth: 40,\n    backgroundColor: color,\n    borderRadius: 16,}}>\n      {number.to(n => (200-n).toFixed(4))}\n      </animated.div>\n    <animated.div style={{\n      color:\"white\",\n      display:\"grid\",\n      justifyItems:\"center\",\n      alignItems:\"center\",\n      width: number,\n      height: 200,\n      minWidth: 40,\n    backgroundColor: color2,\n    borderRadius: 16,}}>{number.to(n => n.toFixed(4))}</animated.div>\n    </div>\n}","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}